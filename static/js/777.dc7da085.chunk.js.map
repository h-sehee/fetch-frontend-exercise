{"version":3,"file":"static/js/777.dc7da085.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/react/dist/esm/modal/drawer.mjs","../node_modules/@chakra-ui/react/dist/esm/transition/slide.mjs","../node_modules/@chakra-ui/react/dist/esm/modal/drawer-content.mjs","../node_modules/@chakra-ui/react/dist/esm/modal/modal-header.mjs","../node_modules/@chakra-ui/react/dist/esm/modal/modal-body.mjs","components/FavoritesDrawer.tsx","hooks/useDogLocation.ts"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext } from '@chakra-ui/utils';\nimport { Modal } from './modal.mjs';\nexport { ModalBody as DrawerBody } from './modal-body.mjs';\nexport { ModalCloseButton as DrawerCloseButton } from './modal-close-button.mjs';\nexport { ModalFooter as DrawerFooter } from './modal-footer.mjs';\nexport { ModalHeader as DrawerHeader } from './modal-header.mjs';\nexport { ModalOverlay as DrawerOverlay } from './modal-overlay.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\n\nconst [DrawerContextProvider, useDrawerContext] = createContext();\nconst placementMap = {\n  start: { ltr: \"left\", rtl: \"right\" },\n  end: { ltr: \"right\", rtl: \"left\" }\n};\nfunction getDrawerPlacement(placement, dir) {\n  if (!placement)\n    return;\n  return placementMap[placement]?.[dir] ?? placement;\n}\nfunction Drawer(props) {\n  const {\n    isOpen,\n    onClose,\n    placement: placementProp = \"right\",\n    children,\n    ...rest\n  } = props;\n  const theme = useTheme();\n  const drawerStyleConfig = theme.components?.Drawer;\n  const placement = getDrawerPlacement(placementProp, theme.direction);\n  return /* @__PURE__ */ jsx(DrawerContextProvider, { value: { placement }, children: /* @__PURE__ */ jsx(\n    Modal,\n    {\n      isOpen,\n      onClose,\n      styleConfig: drawerStyleConfig,\n      ...rest,\n      children\n    }\n  ) });\n}\n\nexport { Drawer, useDrawerContext };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { forwardRef } from 'react';\nimport { getSlideTransition, TRANSITION_EASINGS, withDelay } from './transition-utils.mjs';\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nconst variants = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = getSlideTransition({ direction });\n    return {\n      ...exitStyles,\n      transition: transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit\n    };\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = getSlideTransition({ direction });\n    return {\n      ...enterStyles,\n      transition: transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter\n    };\n  }\n};\nconst Slide = forwardRef(\n  function Slide2(props, ref) {\n    const {\n      direction = \"right\",\n      style,\n      unmountOnExit,\n      in: isOpen,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      motionProps,\n      animatePresenceProps,\n      ...rest\n    } = props;\n    const transitionStyles = getSlideTransition({ direction });\n    const computedStyle = Object.assign(\n      { position: \"fixed\" },\n      transitionStyles.position,\n      style\n    );\n    const show = unmountOnExit ? isOpen && unmountOnExit : true;\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n    const custom = { transitionEnd, transition, direction, delay };\n    return /* @__PURE__ */ jsx(AnimatePresence, { ...animatePresenceProps, custom, children: show && /* @__PURE__ */ jsx(\n      motion.div,\n      {\n        ...rest,\n        ref,\n        initial: \"exit\",\n        className: cx(\"chakra-slide\", className),\n        animate,\n        exit: \"exit\",\n        custom,\n        variants,\n        style: computedStyle,\n        ...motionProps\n      }\n    ) });\n  }\n);\nSlide.displayName = \"Slide\";\n\nexport { Slide };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useDrawerContext } from './drawer.mjs';\nimport { useModalContext, useModalStyles } from './modal.mjs';\nimport { ModalFocusScope } from './modal-focus.mjs';\nimport { Slide } from '../transition/slide.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst MotionDiv = chakra(Slide);\nconst DrawerContent = forwardRef(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      motionProps,\n      containerProps: rootProps,\n      ...rest\n    } = props;\n    const { getDialogProps, getDialogContainerProps, isOpen } = useModalContext();\n    const dialogProps = getDialogProps(rest, ref);\n    const containerProps = getDialogContainerProps(rootProps);\n    const _className = cx(\"chakra-modal__content\", className);\n    const styles = useModalStyles();\n    const dialogStyles = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog\n    };\n    const dialogContainerStyles = {\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"$100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer\n    };\n    const { placement } = useDrawerContext();\n    return /* @__PURE__ */ jsx(ModalFocusScope, { children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...containerProps,\n        className: \"chakra-modal__content-container\",\n        __css: dialogContainerStyles,\n        children: /* @__PURE__ */ jsx(\n          MotionDiv,\n          {\n            motionProps,\n            direction: placement,\n            in: isOpen,\n            className: _className,\n            ...dialogProps,\n            __css: dialogStyles,\n            children\n          }\n        )\n      }\n    ) });\n  }\n);\nDrawerContent.displayName = \"DrawerContent\";\n\nexport { DrawerContent };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { useEffect } from 'react';\nimport { useModalContext, useModalStyles } from './modal.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst ModalHeader = forwardRef(\n  (props, ref) => {\n    const { className, ...rest } = props;\n    const { headerId, setHeaderMounted } = useModalContext();\n    useEffect(() => {\n      setHeaderMounted(true);\n      return () => setHeaderMounted(false);\n    }, [setHeaderMounted]);\n    const _className = cx(\"chakra-modal__header\", className);\n    const styles = useModalStyles();\n    const headerStyles = defineStyle({\n      flex: 0,\n      ...styles.header\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.header,\n      {\n        ref,\n        className: _className,\n        id: headerId,\n        ...rest,\n        __css: headerStyles\n      }\n    );\n  }\n);\nModalHeader.displayName = \"ModalHeader\";\n\nexport { ModalHeader };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useEffect } from 'react';\nimport { useModalContext, useModalStyles } from './modal.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst ModalBody = forwardRef((props, ref) => {\n  const { className, ...rest } = props;\n  const { bodyId, setBodyMounted } = useModalContext();\n  useEffect(() => {\n    setBodyMounted(true);\n    return () => setBodyMounted(false);\n  }, [setBodyMounted]);\n  const _className = cx(\"chakra-modal__body\", className);\n  const styles = useModalStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: _className,\n      id: bodyId,\n      ...rest,\n      __css: styles.body\n    }\n  );\n});\nModalBody.displayName = \"ModalBody\";\n\nexport { ModalBody };\n","import React, { useMemo } from \"react\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  VStack,\n  HStack,\n  Text,\n  Box,\n  IconButton,\n  Flex,\n  Icon,\n  Tag,\n  Avatar,\n} from \"@chakra-ui/react\";\nimport { useFavorites } from \"../context/FavoritesContext\";\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { useDogLocations } from \"../hooks/useDogLocation\";\n\n/**\n * Drawer component that displays the user's favorite dogs (\"Barkmarks\").\n * Allows users to view, filter, and remove favorites.\n */\nconst FavoritesDrawer: React.FC = () => {\n  // Get favorites state and actions from context\n  const {\n    favorites,\n    favoriteDogsDetails,\n    isFavOpen,\n    closeFavorites,\n    toggleFavorite,\n  } = useFavorites();\n\n  // Get unique zip codes from favorite dogs for location lookup\n  const zips = useMemo(() => {\n    return Array.from(\n      new Set(favoriteDogsDetails.map((d) => d.zip_code))\n    ).filter(Boolean);\n  }, [favoriteDogsDetails]);\n\n  // Fetch location info for favorite dogs\n  const { locationsMap: dogLocations, loading } = useDogLocations(zips);\n  return (\n    <Drawer\n      placement=\"right\"\n      onClose={closeFavorites}\n      isOpen={isFavOpen}\n      size=\"sm\"\n    >\n      <DrawerOverlay />\n      <DrawerContent>\n        <DrawerHeader borderBottomWidth=\"1px\">\n          <Flex align=\"center\" justify=\"space-between\">\n            <Text fontWeight=\"bold\" fontSize=\"xl\">\n              My Barkmarks\n            </Text>\n            <DrawerCloseButton position=\"static\" />\n          </Flex>\n        </DrawerHeader>\n        <DrawerBody>\n          {/* Show empty state if no favorites */}\n          {favoriteDogsDetails.length === 0 ? (\n            <Box textAlign=\"center\" py=\"10\">\n              <Text color=\"gray.500\">\n                Nothing here yet. Find a pup you love!\n              </Text>\n            </Box>\n          ) : (\n            <VStack spacing=\"4\" align=\"stretch\" mt={3}>\n              {/* Render each favorite dog */}\n              {favoriteDogsDetails.map((dog) => (\n                <Flex key={dog.id} align=\"center\" gap={4} borderRadius=\"md\">\n                  {/* Dog image */}\n                  <Avatar\n                    src={dog.img}\n                    boxSize=\"70px\"\n                    objectFit=\"cover\"\n                    borderRadius=\"md\"\n                  />\n                  {/* Dog info */}\n                  <VStack align=\"start\" spacing={1}>\n                    <Text fontWeight=\"bold\" fontSize=\"lg\">\n                      {dog.name}\n                    </Text>\n                    <HStack spacing={2} wrap=\"wrap\">\n                      {/* Breed tag */}\n                      <Tag colorScheme=\"blue\" size=\"sm\">\n                        {dog.breed}\n                      </Tag>\n                      {/* Age tag */}\n                      <Tag\n                        size=\"sm\"\n                        colorScheme={\n                          dog.age <= 2\n                            ? \"green\"\n                            : dog.age <= 8\n                            ? \"yellow\"\n                            : \"red\"\n                        }\n                      >\n                        {dog.age} yr{dog.age > 1 ? \"s\" : \"\"}\n                      </Tag>\n                      {/* State tag */}\n                      {loading ? (\n                        <></>\n                      ) : (\n                        <Tag variant=\"outline\" size=\"sm\">\n                          {dogLocations[dog.zip_code]?.state}\n                        </Tag>\n                      )}\n                    </HStack>\n                  </VStack>\n                  {/* Favorite toggle button */}\n                  <IconButton\n                    aria-label={\"Drawer\"}\n                    icon={\n                      favorites.has(dog.id) ? (\n                        <Icon as={AiFillStar as React.ElementType} />\n                      ) : (\n                        <Icon as={AiOutlineStar as React.ElementType} />\n                      )\n                    }\n                    size=\"lg\"\n                    variant=\"ghost\"\n                    colorScheme=\"brand\"\n                    onClick={() => toggleFavorite(dog.id)}\n                    ml=\"auto\"\n                  ></IconButton>\n                </Flex>\n              ))}\n            </VStack>\n          )}\n        </DrawerBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport default FavoritesDrawer;\n","import { useEffect, useState, useMemo } from \"react\";\nimport { fetchLocationsByZip, Location } from \"../api\";\n\n/**\n * Custom hook to fetch and map location details for an array of zip codes.\n * Returns a map of zip code to Location and a loading state.\n * @param zipCodes - Array of zip code strings\n */\nexport function useDogLocations(zipCodes: string[]) {\n  const [locationsMap, setLocationsMap] = useState<Record<string, Location>>(\n    {}\n  );\n  const [loading, setLoading] = useState(false);\n\n  // Memoized key to avoid unnecessary fetches\n  const zipKey = useMemo(() => zipCodes.filter(Boolean).join(\",\"), [zipCodes]);\n\n  useEffect(() => {\n    const codes = zipKey ? zipKey.split(\",\") : [];\n    if (codes.length === 0) {\n      setLocationsMap({});\n      return;\n    }\n    let canceled = false;\n\n    (async () => {\n      setLoading(true);\n      try {\n        const list = await fetchLocationsByZip(codes);\n        if (canceled) return;\n        const map: Record<string, Location> = {};\n        list.forEach((loc) => {\n          if (loc) map[loc.zip_code] = loc;\n        });\n        setLocationsMap((prev) => {\n          const prevKeys = Object.keys(prev);\n          const newKeys = Object.keys(map);\n          if (\n            prevKeys.length === newKeys.length &&\n            newKeys.every((k) => prev[k]?.zip_code === map[k]?.zip_code)\n          ) {\n            return prev;\n          }\n          return map;\n        });\n      } catch {\n        if (!canceled) setLocationsMap({});\n      } finally {\n        if (!canceled) setLoading(false);\n      }\n    })();\n\n    // Cleanup to prevent state updates on unmounted component\n    return () => {\n      canceled = true;\n    };\n  }, [zipKey]);\n\n  return { locationsMap, loading };\n}\n\n/**\n * Custom hook to fetch a single location by zip code.\n * Returns the location object and loading state.\n * @param zipCode - Zip code string\n */\nexport function useDogLocation(zipCode?: string) {\n  const zipArray = zipCode ? [zipCode] : [];\n  const { locationsMap, loading } = useDogLocations(zipArray);\n  return {\n    location: zipCode ? locationsMap[zipCode] : undefined,\n    loading,\n  };\n}\n"],"names":["_excluded","DrawerContextProvider","useDrawerContext","createContext","placementMap","start","ltr","rtl","end","Drawer","props","_theme$components","isOpen","onClose","placement","placementProp","children","rest","_objectWithoutProperties","theme","useTheme","drawerStyleConfig","components","dir","_placementMap$placeme","_placementMap$placeme2","getDrawerPlacement","direction","jsx","value","Modal","_objectSpread","styleConfig","defaultTransition","exit","duration","ease","TRANSITION_EASINGS","easeInOut","enter","type","damping","stiffness","variants","_ref","_transition$exit","transition","transitionEnd","delay","exitStyles","getSlideTransition","withDelay","_ref2","_transition$enter","enterStyles","Slide","forwardRef","ref","style","unmountOnExit","in","className","motionProps","animatePresenceProps","transitionStyles","computedStyle","Object","assign","position","show","animate","custom","AnimatePresence","motion","div","initial","cx","displayName","MotionDiv","chakra","DrawerContent","containerProps","rootProps","getDialogProps","getDialogContainerProps","useModalContext","dialogProps","_className","styles","useModalStyles","dialogStyles","display","flexDirection","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","ModalFocusScope","__css","ModalHeader","headerId","setHeaderMounted","useEffect","headerStyles","defineStyle","flex","header","id","ModalBody","bodyId","setBodyMounted","body","FavoritesDrawer","favorites","favoriteDogsDetails","isFavOpen","closeFavorites","toggleFavorite","useFavorites","zips","useMemo","Array","from","Set","map","d","zip_code","filter","Boolean","locationsMap","dogLocations","loading","useDogLocations","_jsxs","size","_jsx","DrawerOverlay","DrawerHeader","borderBottomWidth","Flex","align","justify","Text","fontWeight","fontSize","DrawerCloseButton","DrawerBody","length","Box","textAlign","py","color","VStack","spacing","mt","dog","_dogLocations$dog$zip","gap","borderRadius","Avatar","src","img","boxSize","objectFit","name","HStack","wrap","Tag","colorScheme","breed","age","_Fragment","variant","state","IconButton","icon","has","Icon","as","AiFillStar","AiOutlineStar","onClick","ml","zipCodes","setLocationsMap","useState","setLoading","zipKey","join","codes","split","canceled","list","fetchLocationsByZip","forEach","loc","prev","prevKeys","keys","newKeys","every","k","_prev$k","_map$k","_unused","useDogLocation","zipCode","zipArray","location","undefined"],"sourceRoot":""}